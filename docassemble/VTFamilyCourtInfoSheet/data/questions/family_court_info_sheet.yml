comment: |
  This interview will be part of the Divorce package. It is also its own stand-alone interview.
  Need to finish the attachment section for assistance and child support
  On the PDF, why does the first date of birth come out wrong? But then you click in the field on the pdf and the correct date shows up?
---
include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALToolbox:phone-number-validation.yml
  - docassemble.VTSharedYMLFile:VTSharedYMLFile.yml
---
metadata:
  title: >-
    Family court information sheet
  short title: >-
    Family court info sheet
  description: |-
    This interview helps someone in Vermont fill in the Family Court Information Sheet -- Form 800. The form is required for many family court cases. It is required when you file for a divorce.
  tags:
    - "FA-06-00-00-00"
  authors:
    - VTCourtForms by Legal Services Vermont
  original_form:
    - https://vtlawhelp.org/roadmap/divorce/step-3
  help_page_url: >-
    https://vtlawhelp.org/roadmap/divorce/step-3
  help_page_title: >-
    Divorce Roadmap
  allowed courts: 
    - "Family Court"
  #typical_role: "plaintiff"
  al_weaver_version: "1.10.2"
  generated_on: "2023-11-11"
---
code: |
  trial_court = all_courts.as_court('trial_court', trial_court_index)
  trial_court.geolocate()  
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = "VT"
---
code: |
  github_repo_name =  'docassemble-BInfoSheetFamilyCourt'
---
code: |
  interview_short_title = "Fill in the Vermont Family Court Information Sheet -- Form 800"
---
code: |
  al_form_type = "starts_case" 
---
objects:
  - users: ALPeopleList.using(ask_number=True,target_number=1)
  - other_parties: ALPeopleList.using(ask_number=True)
  - children: ALPeopleList.using(ask_number=True,complete_attribute="complete")
---
sections:
  - review_b_info_sheet_family_court: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_b_info_sheet_family_court
code: |
  nav.set_section("intro")
  set_progress(5)
  how_to_edit_answers
  docket_number
  set_progress(10)
  trial_court.address.address
  OCS_filing_form
  set_progress(20)

  users1_role
  nav.set_section("about")
  users.gather()
  users[0].address.address
  set_progress(30)
  users[0].email
  users[0].birthdate
  set_progress(40)
  users1_gets_public_assistance
  users1_has_attorney
  nav.set_section('other_party')
  set_progress(50)
  other_parties.gather()
  other_parties[0].name.first
  other_parties[0].address.address
  set_progress(60)
  other_parties[0].daytime_phone_number
  other_parties[0].birthdate
  set_progress(70)
  other_parties1_gets_child_support
  other_parties1_has_attorney
  set_progress(80)
  nav.set_section('other_proceedings')
  other_family_juv_probate_proceedings
  set_progress(90)
  trial_court.address.county
  nav.set_section('review')
  b_info_sheet_family_court_preview_question
  interview_order_b_info_sheet_family_court = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  interview_order_b_info_sheet_family_court
  #no signature needed
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  nav.set_section('get_docs')
  b_info_sheet_family_court_download
---
sections:
  - intro: Introduction
  - about: About you
  - other_party: About the other party
  - other_proceedings: Other court actions
  - review: Edit your answers
  - get_docs: Get your documents
---
id: basic questions intro screen
decoration: form-lineal
question: |
  **${interview_short_title}**
subquestion: |  

  <p>${ intro_vtcourtforms_3_steps }</p>
  
  <i class="fas fa-file-text fa-2x"></i>This interview will help you fill in the Vermont Family Court Information Sheet -- Form 800. This form is required for many family court cases. It is required when you file for a divorce.  

  Before you get started, you will need:
  
  - to know if you are the plaintiff or the defendant in this court case (check your other court forms)
  - the other party's birth date and contact information (including mailing address, phone and email)
  - location of other family, juvenile or probate court cases that are in progress, and
  - if there are lawyers involved: their name(s) and phone number(s).
  
  <i class="fas fa-clock fa-2x"></i> It may take you 20 minutes to complete this interview.
  
  <i class="fas fa-circle-info fa-2x"></i> It is free to use this program. This site is not a lawyer. Visit our [VTLawHelp.org website](https://vtlawhelp.org/roadmap/divorce/step-1) for more information about divorce, separation, or civil union dissolution.

  <p>${ intro_vtcourtforms_created_by }</p>

fields:
  - To continue, please accept our [terms of use](https://vtlawhelp.org/vlh-privacy).: acknowledged_information_use
    datatype: checkboxes
    none of the above: False    
    minlength: 1
    choices:
      - I accept the terms of use.
    validation messages:
      minlength: |
        You cannot continue unless you agree to the terms of use.        
continue button field: al_intro_screen
---
id: how_to_edit_answers
question: |
  How to edit your answers
subquestion: |
  ${ intro_how_to_edit_answers }
  
  ${ collapse_template(asterisk) }
continue button field: how_to_edit_answers
---
id: choose a court
question: |
  Choose a court
fields:
  - note: |
      Choose the county where you will file this form.
      ${ collapse_template(family_court_which_county) }
      
      Not sure what county you are in? [Check this list of cities and towns to find the county.](https://en.m.wikipedia.org/wiki/List_of_municipalities_in_Vermont#Cities)
  - County: trial_court_index
    code: all_courts._load_courts()['address_county'].items()
---
template: family_court_which_county
subject: |
  Not sure which county to pick?
content: |
  * If you already have a court case in progress, select the county that is listed on your court papers.
  * If you are starting a new case, or if you are looking to change counties, file in the county where you or the other party live. 
  * If you have children, you would likely file in the county where your children live most of the time. 
  * If you do not have children, you could file in the county your marital home resides in.
  * If you arenâ€™t sure where to file, check for advice on [VTLawHelp.org](https://vtlawhelp.org/family), call your [local courthouse](https://www.vermontjudiciary.org/court-locations), contact the [Vermont Judiciary Access Resource Center](https://www.vermontjudiciary.org/self-help/ARC), or contact [Legal Services Vermont](https://vtlawhelp.org/how-we-can-help).  
---
id: users role
question: |
  Your role
subquestion: |
  Look at your other court papers to see if you are listed as the plaintiff or the defendant for this court case.
fields:
  - "What is your role in this case?": users1_role
    input type: radio
    choices:
    - You are the 'Plaintiff,' which means you started the case: role_plaintiff
    - You are the 'Defendant,' which means you did not start the case but are responding to it: role_defendant   
---
id: users name
sets:
    - users[0].name.first
    - users[0].name.last
    - users[0].name.middle
    - users[0].name.suffix
question:  |
  What is your name?
fields:
  - code: |
      users[0].name_fields()
---
id: Gather users street address
sets:
  - users[0].address.address
  - users[0].address.city
  - users[0].address.zip
  - users[0].address.unit
  - users[0].address.state
  - users[0].address.country
question: |
  What is your address?
subquestion: | 
  Note: If needed, you can [talk with an advocate](https://vtnetwork.org/) about how to get a safe mailing address. 
fields:
  - code: |
      users[0].address_fields(default_state=AL_DEFAULT_STATE)
  - You have a mailing address that is different from your street address: users1_mailing_address_different
    datatype: yesno
  - Mailing address: users[0].mailing_address.address
    address autocomplete: True
    show if: users1_mailing_address_different
  - Unit: users[0].mailing_address.unit
    required: False
    show if: users1_mailing_address_different
  - City: users[0].mailing_address.city
    show if: users1_mailing_address_different
  - State: users[0].mailing_address.state
    code: |
      states_list()
    default: VT
    show if: users1_mailing_address_different
  - Zip or postal code: users[0].mailing_address.zip
    required: False
    show if: users1_mailing_address_different
---
id: user birthdate question
question: |
  When were you born?
fields:
  - Birthdate: users[0].birthdate
    required: True
    datatype: BirthDate

---
id: Gather users contact information
question: |
  What is your contact information?
subquestion: |
  Include **at least one way** to reach you. 
fields:  
  - Daytime phone number: users[0].daytime_phone_number
    datatype: al_international_phone
    required: False
  - Evening phone number: users[0].evening_phone_number
    datatype: al_international_phone
    required: False
  - Email: users[0].email    
    datatype: email
    required: False      
validation code: |
  if (not showifdef('users[0].daytime_phone_number') and \
      (not showifdef('users[0].email')) and \
      (not showifdef('users[0].evening_phone_number'))):
    validation_error(word("You need to provide at least one contact method."))    
---
id: users lawyer
question: |
  Lawyer
fields:
  - "Do you have a lawyer for this case?": users1_has_attorney
    datatype: yesnomaybe
  - "Lawyer's name": users1_attorneys_name
    maxlength: 20
    required: False
    show if: users1_has_attorney
  - "Lawyer's phone number": users1_attorneys_phone_number
    maxlength: 21
    required: False
    show if: users1_has_attorney
---
id: users benefits or child support
question: |
  Do you get any benefits or child support?
fields:
  - note: |      
      Public assistance can include help from Vermont's Department of Economic Services such as Reach-Up, Dr. Dynasaur, Medicaid, or Post Secondary Education Stipend (PSE).
      
      Check all that apply.

  - "Gets public assistance": users1_gets_public_assistance
    datatype: yesno
    
  - "Gets child support": users1_gets_child_support
    datatype: yesno

  - note: |
      ${ collapse_template(office_of_child_support_contact) }
---
template: office_of_child_support_contact
subject: |
  Need help with child support?
content: |
      The Office of Child Support can help people with child support questions and problems. Call them at 1-800-786-3214 or TTY access number 1-800-253-0191.

---
---
id: how many other parties
question: |
  The other party
fields:  
  - note: |
      % if defined("users1_role") and users1_role == "role_plaintiff":
      How many defendants are in this case? 
      % endif
      % if defined("users1_role") and users1_role == "role_defendant":
      How many plaintiffs are in this case?
      % endif
    
  - "How many?": other_parties.target_number
    datatype: integer    
---  
id: gather other parties info
sets:
  - other_parties[i].name.first
  - other_parties[i].name.last
  - other_parties[i].address.address  
  - other_parties[i].served
question: |
  % if other_parties.target_number == 1:
  About the other party
  % elif other_parties.target_number > 1:
  About the **${ ordinal(i) }** other party
  % else:
  About the other party
  % endif
fields:
  - First Name: other_parties[i].name.first
  - Middle Name: other_parties[i].name.middle
    required: False
  - Last Name: other_parties[i].name.last
  - Suffix: other_parties[i].name.suffix
    choices: 
      - Jr
      - Sr
      - I
      - II
      - III
    required: False

---
id: other parties address
sets:
  - other_parties[0].address.address
  - other_parties[0].address.city
  - other_parties[0].address.zip
  - other_parties[0].address.unit
  - other_parties[0].address.state
  - other_parties[0].address.country
question: |
  What is ${ other_parties[0].name }'s address?
fields:
  - Defendant's address: other_parties[0].address
    datatype: object_radio
    choices:
      - users[0].address if defined("users[0].address.address") else None
    object labeler: |
      lambda y: y.on_one_line()
    none of the above: |
      Somewhere else
    default: users[0].address
    disable others: True      
    show if:
      code: |
        defined("users[0].address.address")
  - ${ users[0].address.address_label}: other_parties[0].address.address
    address autocomplete: True
  - ${ users[0].address.unit_label}: other_parties[0].address.unit
    required: False
  - ${ users[0].address.city_label}: other_parties[0].address.city
  - ${ users[0].address.state_label}: other_parties[0].address.state
    code: |
      states_list(country_code=AL_DEFAULT_COUNTRY)
    default: ${ AL_DEFAULT_STATE }
  - ${ users[0].address.zip_label}: other_parties[0].address.zip
    required: False      
  - ${ users[0].address.country_label}: other_parties[0].address.country
    code: countries_list()
    default: ${ AL_DEFAULT_COUNTRY }
  - ${ other_parties[0].name } has a mailing address that is different from their street address: other_parties1_mailing_address_different
    datatype: yesno
  - Mailing address: other_parties[0].mailing_address.address
    address autocomplete: True
    show if: other_parties1_mailing_address_different
  - Unit: other_parties[0].mailing_address.unit
    required: False
    show if: other_parties1_mailing_address_different
  - City: other_parties[0].mailing_address.city
    show if: other_parties1_mailing_address_different
  - State: other_parties[0].mailing_address.state
    code: |
      states_list()
    default: VT
    show if: other_parties1_mailing_address_different
  - Zip or postal code: other_parties[0].mailing_address.zip
    required: False
    show if: other_parties1_mailing_address_different
---
id: defendants phone numbers
question: |
  ${ other_parties[0].name }'s contact information
subquestion: |
  Include **at least one way** to reach them. 
fields:  
  - Daytime phone number: other_parties[0].daytime_phone_number
    datatype: al_international_phone
    required: False
  - Evening phone number: other_parties[0].evening_phone_number
    datatype: al_international_phone
    required: False
  - Email: other_parties[0].email    
    datatype: email
    required: False      
validation code: |
  if (not showifdef('other_parties[0].daytime_phone_number') and \
      (not showifdef('other_parties[0].email')) and \
      (not showifdef('other_parties[0].evening_phone_number'))):
    validation_error(word("You need to provide at least one contact method."))     
---
id: defendants lawyer
question: |
  ${ other_parties[0].name }'s lawyer
fields:
  - "Does ${ other_parties[0].name } have a lawyer for this case?": other_parties1_has_attorney
    datatype: yesnomaybe
  - "Lawyer's name": other_parties1_attorneys_name
    maxlength: 20
    required: False
    show if: other_parties1_has_attorney
  - "Lawyer's phone number": other_parties1_attorneys_phone_number
    maxlength: 21
    required: False
    show if: other_parties1_has_attorney
---
id: defendant gets child support
question: |
  Child support
fields:
  - "Does ${ other_parties[0].name } get child support?": other_parties1_gets_child_support
    datatype: yesnomaybe
---
id: office of child support
question: |
  Office of Child Support
fields:
  - "Check this box if you are an employee of the Office of Child Support who is filling out this form": OCS_filing_form
    datatype: yesno
  - note: |
      If you are not an OCS employee, continue to the next question.
---
id: other court proceedings
question: |
  Other court proceedings
subquestion: |
  Are there other Family court, Probate court or Juvenile court cases involving you, the other party and/or your children?
fields:
  - "Other court cases?": other_family_juv_probate_proceedings
    datatype: yesnoradio
  - "In what state?": trial_court_state_other_filing1
    code: |
      states_list()
    show if: other_family_juv_probate_proceedings
  - "In what county?": trial_court_county_other_filing1
    choices:
      - Addison
      - Bennington
      - Caledonia
      - Chittenden
      - Essex
      - Franklin
      - Grand Isle
      - Lamoille
      - Orange
      - Orleans
      - Rutland
      - Washington
      - Windham
      - Windsor
      - Other
    show if: other_family_juv_probate_proceedings
  - "What county?": trial_court_other_county_other_filing1
    maxlength: 22
    show if:
      variable: trial_court_county_other_filing1
      is: Other
  - "In what court division?": trial_court_division_other_filing1
    choices:
      - Family court
      - Probate court
      - Juvenile court
    show if: other_family_juv_probate_proceedings
  - "I have another to list": other_family_juv_probate_proceedings2
    datatype: yesno
    show if: other_family_juv_probate_proceedings
  - "In what state?": trial_court_state_other_filing2
    code: |
      states_list()
    show if: other_family_juv_probate_proceedings2
  - "In what county?": trial_court_county_other_filing2
    choices:
      - Addison
      - Bennington
      - Caledonia
      - Chittenden
      - Essex
      - Franklin
      - Grand Isle
      - Lamoille
      - Orange
      - Orleans
      - Rutland
      - Washington
      - Windham
      - Windsor
      - Other
    show if: other_family_juv_probate_proceedings2
  - "What county?": trial_court_other_county_other_filing2
    maxlength: 22
    show if:
      variable: trial_court_county_other_filing2
      is: Other
  - "In what court division?": trial_court_division_other_filing2
    choices:
      - Family court
      - Probate court
      - Juvenile court
    show if: other_family_juv_probate_proceedings2
  - note: |
      ${ after_last_question_we_will_generate_your_forms }
---
id: preview family_court_info_sheet
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_b_info_sheet_family_court'), label='Edit your answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: b_info_sheet_family_court_preview_question    
---
#no signature needed on this form
#code: |
  #signature_fields = []
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
---
##############REVIEW SCREEN####################
---
id: info sheet review screen
event: review_b_info_sheet_family_court
question: |
  Review your answers
subquestion: |
  ${ review_screen_instructions }
review:

  - Edit: docket_number
    button: |
      Court docket number:
      % if dont_know_docket_number:
      **Unknown**
      % else:
      **${ docket_number }**
      % endif
  - Edit: 
    - trial_court_index
    - recompute:
      - trial_court
    button: |
      % if defined("trial_court"):
      Filing this form in the Family Court of: **${ trial_court.address.county } County**
      % endif
  - Edit: OCS_filing_form
    button: |
      Person filling out this form works for Vermont Office of Child Support?:
      **${ word(yesno(OCS_filing_form)) }**
  - note: | 
      ##Information about you##
  - Edit: users.revisit
    button: |
      About you

      % for item in users:
      
        **${ item }**
      
        - Birthday: **${ format_date(item.birthdate, format='M/d/yyyy') }**
        
        - Address: **${ item.address.on_one_line() }**
        
      % if users1_mailing_address_different:
        - Mailing: **${ item.mailing_address.on_one_line() }**
      % endif

      % endfor    
  - Edit: 
    - users[0].daytime_phone_number
    button: |
      % if users[0].daytime_phone_number != '':
      - Your daytime phone: **${ showifdef('users[0].daytime_phone_number') }**
      % endif
      
      % if users[0].evening_phone_number != '':
      - Evening phone: **${ showifdef('users[0].evening_phone_number') }**
      % endif
      
      % if users[0].email != '':
      - Email: **${ showifdef('users[0].email') }**
      % endif
  - Edit: users1_role
    button: |
      - Your role in this case:
      % if users1_role == "role_plaintiff":
      **Plaintiff**
      % else:
      **Defendant**
      % endif
  - Edit: users1_attorneys_name
    button: |
      % if users1_has_attorney:
        % if users1_attorneys_name != '':
        - Your lawyer's name: **${ showifdef('users1_attorneys_name') }**
        % else:
        - Your lawyer's name: **Unknown**
        % endif
        
        % if users1_attorneys_phone_number != '':
        - Lawyer's phone: **${ showifdef('users1_attorneys_phone_number') }**
        % else:
        - Lawyer's phone: **Unknown**
        % endif
      % endif
      % if users1_has_attorney == False:
        - You have a lawyer?: **No**
      % endif
      % if users1_has_attorney == None:
        - You have a lawyer?: **Unknown**
      % endif
  - Edit: users1_gets_public_assistance
    button: |
      - You get public assistance?:
      **${ word(yesno(users1_gets_public_assistance)) }**

      - You get child support?:
      **${ word(yesno(users1_gets_child_support)) }**     
  - note: | 
      ##Information about the other party##      
  - Edit: other_parties.revisit
    button: |
      About the other party

      % for item in other_parties:
        **${ item }**
      
        - Birthday: **${ format_date(item.birthdate, format='M/d/yyyy') }**
        
        - Address: **${ item.address.on_one_line() }**
        
      % if users1_mailing_address_different:
        - Mailing: **${ item.mailing_address.on_one_line() }**
      % endif     
      % endfor   

  - Edit: other_parties[0].daytime_phone_number
    button: |
      % if other_parties[0].daytime_phone_number != '':
      - Other party's daytime phone: **${ showifdef('other_parties[0].daytime_phone_number') }**
      % endif
      
      % if other_parties[0].evening_phone_number != '':
      - Evening phone: **${ showifdef('other_parties[0].evening_phone_number') }**
      % endif
      
      % if other_parties[0].email != '':
      - Email: **${ showifdef('other_parties[0].email') }**
      % endif
  - Edit: other_parties1_attorneys_name
    button: |
      % if other_parties1_has_attorney:
        % if other_parties1_attorneys_name != '':
        - Other party's lawyer's name: **${ showifdef('other_parties1_attorneys_name') }**
        % else:
        - Other party's lawyer's name: **Unknown**
        % endif
        
        % if other_parties1_attorneys_phone_number != '':
        - Lawyer's phone: **${ showifdef('other_parties1_attorneys_phone_number') }**
        % else:
        - Lawyer's phone: **Unknown**
        % endif
      % endif
      % if other_parties1_has_attorney == False:
        - Other party has lawyer?: **No**
      % endif
      % if other_parties1_has_attorney == None:
        - Other party has lawyer?: **Unknown**
      % endif
  - Edit: other_parties1_gets_child_support
    button: |
      - Other party gets child support?:
      % if other_parties1_gets_child_support == None:
      **Unknown**
      % else:
      **${ word(yesno(other_parties1_gets_child_support)) }**
      % endif
  - note: | 
      ##Other proceedings##
  - Edit: other_family_juv_probate_proceedings
    button: |
      Other court proceedings?:
      **${ word(yesno(other_family_juv_probate_proceedings)) }**
  - Edit: trial_court_state_other_filing1
    button: |
      * In this state:
      **${ trial_court_state_other_filing1 }**

      * In this county:
      % if trial_court_county_other_filing1 == 'Other':
      **${ trial_court_other_county_other_filing1 }**
      % else:
      **${ trial_court_county_other_filing1 }**
      % endif
      
      * In this court division:
      **${ trial_court_division_other_filing1 }**
  - Edit: trial_court_state_other_filing2
    button: |
      * In this state:
      **${ trial_court_state_other_filing2 }**

      * In this county:
      % if trial_court_county_other_filing2 == 'Other':
      **${ trial_court_other_county_other_filing2 }**
      % else:
      **${ trial_court_county_other_filing2 }**
      % endif

      * In this court division:
      **${ trial_court_division_other_filing2 }**

  - note: |
      ${ review_screen_select_resume_will_take_moment }
---
continue button field: users.revisit
question: |
  Your info
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Birthdate: |
      row_item.birthdate if defined("row_item.birthdate") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.state") else ""
  - Mailing address: |
      row_item.mailing_address.address if defined("row_item.mailing_address.address") else ""
edit:
  - name.first
  - birthdate
  - address.state
  - mailing_address.address
confirm: True

---
continue button field: other_parties.revisit
question: |
  Other party's info
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Birthdate: |
      row_item.birthdate if defined("row_item.birthdate") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.state") else ""
  - Mailing address: |
      row_item.mailing_address.address if defined("row_item.mailing_address.address") else ""
edit:
  - name.first
  - birthdate
  - address.state
  - mailing_address.address
confirm: True

---
id: download info sheet
event: b_info_sheet_family_court_download
question: |
  ${ download_screen_instructions_headline }
subquestion: |
  ${ download_screen_instructions }

  ${ action_button_html(url_action('review_b_info_sheet_family_court'), label='Edit your answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }

  ${ download_screen_bottom_instructions }
  
  ${ collapse_template(not_seeing_email) }
  ${ collapse_template(log_out_when_done) }

progress: 100
---
###########Attachments#############
# ALDocument objects specify the metadata for each template
objects:
  - b_info_sheet_family_court_Post_interview_instructions: ALDocument.using(title="Instructions", filename="b_info_sheet_family_court_next_steps.docx", enabled=True, has_addendum=False)
  - b_info_sheet_family_court_attachment: ALDocument.using(title="Family court information sheet", filename="B_info_sheet_family_court", enabled=True, has_addendum=False, )
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[b_info_sheet_family_court_Post_interview_instructions, b_info_sheet_family_court_attachment], filename="B_info_sheet_family_court", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[b_info_sheet_family_court_attachment],  filename="B_info_sheet_family_court", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: b_info_sheet_family_court_next_steps
  docx template file: b_info_sheet_family_court_next_steps.docx
  variable name: b_info_sheet_family_court_Post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
attachment:
  name: b info sheet family court
  filename: B_info_sheet_family_court
  variable name: b_info_sheet_family_court_attachment[i]
  skip undefined: True
  pdf template file: B_info_sheet_family_court.pdf
  fields:
      - "docket_number": ${ docket_number }
      - "trial_court_county": ${ trial_court.address.county }
      - "users1_name": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ users[0] }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ other_parties.short_list(2) }
          % endif
      - "other_parties1_name": |
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ users[0] }
          % endif
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ other_parties.short_list(2) }
          % endif
      - "users1_birthdate": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ format_date(users[0].birthdate, format='M/d/yyyy') }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ format_date(other_parties[0].birthdate, format='M/d/yyyy') }
          % endif      
      
      - "other_parties1_birthdate": |
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ format_date(users[0].birthdate, format='M/d/yyyy') }
          % elif defined("users1_role") and users1_role == "role_plaintiff":
          ${ format_date(other_parties[0].birthdate, format='M/d/yyyy') }
          % endif    

      - "users1_address_address": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ users[0].address.line_one() }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ other_parties[0].address.line_one() }
          % endif          
      - "users1_address_mailing": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ users[0].mailing_address.address }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ other_parties[0].mailing_address.address }
          % endif    
      - "users1_address_city": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ users[0].address.city }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ other_parties[0].address.city }
          % endif    
      - "users1_address_state": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ users[0].address.state }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ other_parties[0].address.state }
          % endif    
      - "users1_address_zip": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ users[0].address.zip }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ other_parties[0].address.zip }
          % endif          
            
      - "other_parties1_address_address": |
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ users[0].address.line_one() }
          % endif
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ other_parties[0].address.line_one() }
          % endif            
      - "other_parties1_address_mailing": |
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ users[0].mailing_address.address }
          % endif
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ other_parties[0].mailing_address.address }
          % endif                  
      - "other_parties1_address_city": |
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ users[0].address.city }
          % endif
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ other_parties[0].address.city }
          % endif    
      - "other_parties1_address_state": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ users[0].address.state }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ other_parties[0].address.state }
          % endif    
      - "other_parties1_address_zip": |
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ users[0].address.zip }
          % endif
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ other_parties[0].address.zip }
          % endif              

      - "users1_daytime_phone_number": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ users[0].daytime_phone_number }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ other_parties[0].daytime_phone_number }
          % endif  
      - "other_parties1_daytime_phone_number": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ other_parties[0].daytime_phone_number }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ users[0].daytime_phone_number }
          % endif    
      - "users1_evening_phone_number": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ users[0].evening_phone_number }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ other_parties[0].evening_phone_number }
          % endif        
      - "other_parties1_evening_phone_number": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ other_parties[0].evening_phone_number }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ users[0].evening_phone_number }
          % endif          
      - "users1_email": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ users[0].email }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ other_parties[0].email }
          % endif          
      - "other_parties1_email": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ other_parties[0].email }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ users[0].email }
          % endif          
      - "other_parties1_attorneys_name": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ other_parties1_attorneys_name }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${users1_attorneys_name }
          % endif    
      - "other_parties1_attorneys_phone_number": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ other_parties1_attorneys_phone_number }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ users1_attorneys_phone_number }
          % endif    
      - "users1_attorneys_name": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ users1_attorneys_name }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ other_parties1_attorneys_name }
          % endif             
      - "users1_attorneys_phone_number": |
          % if defined("users1_role") and users1_role == "role_plaintiff":
          ${ users1_attorneys_phone_number }
          % endif
          % if defined("users1_role") and users1_role == "role_defendant":
          ${ other_parties1_attorneys_phone_number }
          % endif        
      - "OCS_filing_form_yes": ${ OCS_filing_form }
      
      
      - "users1_gets_public_assistance": ${ users1_gets_public_assistance }
      - "users1_gets_child_support": ${ users1_gets_child_support }
      - "other_parties1_gets_child_support": ${ other_parties1_gets_child_support }
      
      
      - "other_family_juv_probate_proceedings_yes": ${ other_family_juv_probate_proceedings }
      - "other_family_juv_probate_proceedings_no": ${ not other_family_juv_probate_proceedings }
      - "trial_court_county_other_filing1": |
          % if trial_court_county_other_filing1 == 'Other':
          ${ trial_court_other_county_other_filing1 }
          % else:
          ${ trial_court_county_other_filing1 }
          % endif
      - "trial_court_division_other_filing1": ${ trial_court_division_other_filing1 }
      - "trial_court_state_other_filing1": ${ trial_court_state_other_filing1 }
      - "trial_court_division_other_filing2": ${ trial_court_division_other_filing2 }
      - "trial_court_county_other_filing2": |
          % if trial_court_county_other_filing2 == 'Other':
          ${ trial_court_other_county_other_filing2 }
          % else:
          ${ trial_court_county_other_filing2 }
          % endif
      - "trial_court_state_other_filing2": ${ trial_court_state_other_filing2 }